import android.os.AsyncTask;
import android.util.Log;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.PolylineOptions;
import com.google.maps.DirectionsApi;
import com.google.maps.DirectionsApiRequest;
import com.google.maps.GeoApiContext;
import com.google.maps.model.DirectionsResult;
import com.google.maps.model.TravelMode;

public class DirectionsTask extends AsyncTask<Void, Void, DirectionsResult> {

    private static final String TAG = "DirectionsTask";
    private static final String API_KEY = "YOUR_API_KEY";

    private LatLng origin;
    private LatLng destination;
    private OnTaskCompleted listener;

    public DirectionsTask(LatLng origin, LatLng destination, OnTaskCompleted listener) {
        this.origin = origin;
        this.destination = destination;
        this.listener = listener;
    }

    @Override
    protected DirectionsResult doInBackground(Void... voids) {
        try {
            GeoApiContext context = new GeoApiContext.Builder()
                    .apiKey(API_KEY)
                    .build();
            DirectionsApiRequest request = DirectionsApi.newRequest(context)
                    .origin(new com.google.maps.model.LatLng(origin.latitude, origin.longitude))
                    .destination(new com.google.maps.model.LatLng(destination.latitude, destination.longitude))
                    .mode(TravelMode.DRIVING);
            return request.await();
        } catch (Exception e) {
            Log.e(TAG, "Error occurred: " + e.getMessage());
            return null;
        }
    }

    @Override
    protected void onPostExecute(DirectionsResult directionsResult) {
        if (directionsResult != null) {
            if (directionsResult.routes.length > 0) {
                PolylineOptions polylineOptions = new PolylineOptions();
                for (com.google.maps.model.LatLng point : directionsResult.routes[0].overviewPolyline.decodePath()) {
                    polylineOptions.add(new LatLng(point.lat, point.lng));
                }
                listener.onTaskCompleted(polylineOptions);
            }
        } else {
            Log.e(TAG, "Direction result is null");
        }
    }

    public interface OnTaskCompleted {
        void onTaskCompleted(PolylineOptions polylineOptions);
    }
}
